msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -x \ -o \\ 
c:\\Program Files\\LLVM\\bin\\clang.exe
Matched, input-length(35) - output-length(39) = -4. Replaced. Input string = c:\Program Files\LLVM\bin\clang.exe 
Return-Value = 1 : msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -x \ -o \\ 

msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -t \\ -o \\ 
c:\Program Files\LLVM\bin\clang.exe
Matched, input-length(35) - output-length(35) = 0. Not replaced. Input string = c:\Program Files\LLVM\bin\clang.exe 
Return-Value = 0 : msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -t \\ -o \\ 

msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -t "\\\\" -o \\ 
c:\Program Files\LLVM\bin\clang.exe
Matched, input-length(35) - output-length(35) = 0. Not replaced. Input string = c:\Program Files\LLVM\bin\clang.exe 
Return-Value = 0 : msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -t "\\\\" -o \\ 

msr -c -z www.lz.text/temp.normal/samples/my.normal/my-stream.xml -x normal/ -t "(www.*)/([^/]+\.xml)\s*" 
www.lz.text/temp.normal/samples/my.normal/my-stream.xml
Matched, input-length(55) - output-length(55) = 0. Input string = www.lz.text/temp.normal/samples/my.normal/my-stream.xml 
Return-Value = 1 : msr -c -z www.lz.text/temp.normal/samples/my.normal/my-stream.xml -x normal/ -t "(www.*)/([/]+\.xml)\s*" 

msr -c -p sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End  Should return 0 
Matched 0 blocks with 0 lines in 1 files
Return-Value = 0 : msr -c -p sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End  Should return 0 

msr -c -p sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End -l Should return 0 
Matched 0 blocks with 0 lines in 1 files
Return-Value = 0 : msr -c -p sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End -l Should return 0 

msr -c -p sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0 
Matched 0 lines in 1 files
Return-Value = 0 : msr -c -p sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0 

msr -c -p sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0 
Matched 0 lines in 1 files
Return-Value = 0 : msr -c -p sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0 

msr -c -p sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing 
Matched 134 lines(100%) in 1 files(100%)
Return-Value = 134 : msr -c -p sample-file.txt -S -t "(.+\S+)\s*$" -H 0         # Check return value, output nothing 

msr -c -p sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing 
Matched 0 lines in 0 files
Return-Value = 0 : msr -c -p sample-file.txt -S -t "(.+\S+)$" -H 0            # Check return value, output nothing 

msr -c -p sample-file.txt -S -t "^(.+\S+)\n$" -H 0          # Check return value, output nothing 
Matched 134 lines(100%) in 1 files(100%)
Return-Value = 134 : msr -c -p sample-file.txt -S -t "(.+\S+)\n$" -H 0          # Check return value, output nothing 

msr -c -p . -f bat -l -PAC -H 0 
Return-Value = 6 : msr -c -p . -f bat -l -PAC -H 0 

msr -c -p . -f bat -l -PIC -H 0 
Return-Value = 6 : msr -c -p . -f bat -l -PIC -H 0 

msr -c -p . -l -f bat -H -2 # Should skip top 2 items. 
3 : Replace-Real-File-Name-To-Avoid-Difference
4 : Replace-Real-File-Name-To-Avoid-Difference
5 : Replace-Real-File-Name-To-Avoid-Difference
6 : Replace-Real-File-Name-To-Avoid-Difference
Matched 6 files
Return-Value = 6 : msr -c -p . -l -f bat -H -2 # Should skip top 2 items. 

msr -c -p . -l -f bat -T -2 # Should skip bottom 2 items. 
1 : Replace-Real-File-Name-To-Avoid-Difference
2 : Replace-Real-File-Name-To-Avoid-Difference
3 : Replace-Real-File-Name-To-Avoid-Difference
4 : Replace-Real-File-Name-To-Avoid-Difference
Matched 6 files
Return-Value = 6 : msr -c -p . -l -f bat -T -2 # Should skip bottom 2 items. 

msr -c -p . -l -f bat -H -2 --sz # Should skip top 2 items. 
3-6 :  Number-Unit  Bytes	Replace-Real-File-Name-To-Avoid-Difference
4-6 :  Number-Unit  Bytes	Replace-Real-File-Name-To-Avoid-Difference
5-6 :  Number-Unit  Bytes	Replace-Real-File-Name-To-Avoid-Difference
6-6 :  Number-Unit  Bytes	Replace-Real-File-Name-To-Avoid-Difference
Matched 6 files
Return-Value = 6 : msr -c -p . -l -f bat -H -2 --sz # Should skip top 2 items. 

msr -c -p . -l -f bat -T -2 --wt # Should skip bottom 2 items. 
1-6 : yyyy-MM-dd HH:mm:ss	Replace-Real-File-Name-To-Avoid-Difference
2-6 : yyyy-MM-dd HH:mm:ss	Replace-Real-File-Name-To-Avoid-Difference
3-6 : yyyy-MM-dd HH:mm:ss	Replace-Real-File-Name-To-Avoid-Difference
4-6 : yyyy-MM-dd HH:mm:ss	Replace-Real-File-Name-To-Avoid-Difference
Matched 6 files
Return-Value = 6 : msr -c -p . -l -f bat -T -2 --wt # Should skip bottom 2 items. 

msr -c -p . -l -f bat -H 2 --wt # Should show top 2 items. 
1-6 : yyyy-MM-dd HH:mm:ss	Replace-Real-File-Name-To-Avoid-Difference
2-6 : yyyy-MM-dd HH:mm:ss	Replace-Real-File-Name-To-Avoid-Difference
Matched 6 files
Return-Value = 6 : msr -c -p . -l -f bat -H 2 --wt # Should show top 2 items. 

msr -c -p . -l -f bat -T 2 # Should show bottom 2 items. 
5 : Replace-Real-File-Name-To-Avoid-Difference
6 : Replace-Real-File-Name-To-Avoid-Difference
Matched 6 files
Return-Value = 6 : msr -c -p . -l -f bat -T 2 # Should show bottom 2 items. 

msr -c -p sample-file.txt -L 7 -N 9 -t Not -U 2 -D 2 
sample-file.txt:7: enum class LineType {
sample-file.txt:8:     NotMatchedLine = 0,
sample-file.txt:9:     MatchedLine = 1,
Matched 1 lines(11.11%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -L 7 -N 9 -t Not -U 2 -D 2 

msr -c -p sample-file.txt -it node --nt "node\d+" 
sample-file.txt:48:   <as::item ref="NodeCitOnly" />
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:67:   <Subject>Node 2 title in body for test</Subject>
sample-file.txt:75:   <as::item ref="NodeCitOnly" />
Matched 4 lines(2.99%) in 1 files(100%)
Return-Value = 4 : msr -c -p sample-file.txt -it node --nt "node\d+" 

msr -c -p sample-file.txt -it node --nt "node\d+" -o "NODE" 
sample-file.txt:48:   <as::item ref="NODECitOnly" />
sample-file.txt:62:   <as::item ref="NODECitOnly" />
sample-file.txt:67:   <Subject>NODE 2 title in body for test</Subject>
sample-file.txt:75:   <as::item ref="NODECitOnly" />
Matched 4 lines(2.99%) in 1 files(100%)
Return-Value = 4 : msr -c -p sample-file.txt -it node --nt "node\d+" -o "NODE" 

msr -c -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t "Node[13]" -a -L 20 -N 50 ## Must no blocks 
Matched 0 blocks with 0 lines in 0 files
Return-Value = 0 : msr -c -p sample-file.txt -b "\s*<Tag" -Q "\s*</Tag" -t "Node[13]" -a -L 20 -N 50 ## Must no blocks 

msr -c -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t "Node[13]" -a -L 20 -N 80 ## Must have only 1 block 
sample-file.txt:47: <Tag Name="Node1">
sample-file.txt:48:   <as::item ref="NodeCitOnly" />
sample-file.txt:49:   <as::item ref="Node1Config" />
sample-file.txt:50:   <MailTo>Alex@abc.com</MailTo>
sample-file.txt:51:   <as::item ref="Node1Body">
sample-file.txt:52:     <as::pairs>
sample-file.txt:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
sample-file.txt:54:       <as::pair name="Function">#FUNCTION#</as::pair>
sample-file.txt:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
sample-file.txt:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
sample-file.txt:57:     </as::pairs>
sample-file.txt:58:   </as::item>
sample-file.txt:59: </Tag>
Matched 1 blocks(33.33%) with 3 lines(3.75%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*<Tag" -Q "\s*</Tag" -t "Node[13]" -a -L 20 -N 80 ## Must have only 1 block 

msr -c -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t "Node[13]" -a  ## Must have and only 2 blocks: Node1 and Node3 
sample-file.txt:47: <Tag Name="Node1">
sample-file.txt:48:   <as::item ref="NodeCitOnly" />
sample-file.txt:49:   <as::item ref="Node1Config" />
sample-file.txt:50:   <MailTo>Alex@abc.com</MailTo>
sample-file.txt:51:   <as::item ref="Node1Body">
sample-file.txt:52:     <as::pairs>
sample-file.txt:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
sample-file.txt:54:       <as::pair name="Function">#FUNCTION#</as::pair>
sample-file.txt:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
sample-file.txt:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
sample-file.txt:57:     </as::pairs>
sample-file.txt:58:   </as::item>
sample-file.txt:59: </Tag>
sample-file.txt:74: <Tag Name="Node3">
sample-file.txt:75:   <as::item ref="NodeCitOnly" />
sample-file.txt:76:   <as::item ref="Node3Config" />
sample-file.txt:77: 
sample-file.txt:78:   <MailTo>Clark@abc.com</MailTo>
sample-file.txt:79:   <AllowReTry>true</AllowReTry>
sample-file.txt:80:   <SubArgs>
sample-file.txt:81:     <SubArg>HBase</SubArg>
sample-file.txt:82:   </SubArgs>
sample-file.txt:83:   <Subject>Node3 title in body for test</Subject>
sample-file.txt:84:   <Hosts>
sample-file.txt:85:     <HBrgetHost>LZHOST</HBrgetHost>
sample-file.txt:86:   </Hosts>
sample-file.txt:87: </Tag>
Matched 2 blocks(66.67%) with 6 lines(4.48%) in 1 files(100%)
Return-Value = 2 : msr -c -p sample-file.txt -b "\s*<Tag" -Q "\s*</Tag" -t "Node[13]" -a  ## Must have and only 2 blocks: Node1 and Node3 

msr -c -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t "Node[1-3]" -x Node2 -a ## Must have only Node2 block 
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 title in body for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Matched 1 blocks(33.33%) with 2 lines(1.49%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*<Tag" -Q "\s*</Tag" -t "Node[1-3]" -x Node2 -a ## Must have only Node2 block 

msr -c -p sample-file.txt -ib "^\s*<tag" -Q "^\s*</tag" --nt "Node[1-3]" -e "Node\d+"  ## Must no block to output 
Matched 0 blocks with 0 lines in 0 files
Return-Value = 0 : msr -c -p sample-file.txt -ib "\s*<tag" -Q "\s*</tag" --nt "Node[1-3]" -e "Node\d+"  ## Must no block to output 

msr -c -p sample-file.txt -b "^\s*<tag" -iQ "^\s*</tag" --nt "Node[1-3]"  ## Must no block to output 
Matched 0 blocks with 0 lines in 0 files
Return-Value = 0 : msr -c -p sample-file.txt -b "\s*<tag" -iQ "\s*</tag" --nt "Node[1-3]"  ## Must no block to output 

msr -c -p sample-file.txt -b "^\s*<tag" -Q "^\s*</tag" -i --nt "Node[1-3]" -a  ## Must no block to output 
Matched 0 blocks with 0 lines in 0 files
Return-Value = 0 : msr -c -p sample-file.txt -b "\s*<tag" -Q "\s*</tag" -i --nt "Node[1-3]" -a  ## Must no block to output 

msr -c -p sample-file.txt -b "^\s*<tag" -Q "^\s*</tag" -i --nt "Node[13]" -t "Node\d+"  ## Must have only Node2 but not whole block 
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:63:   <as::item ref="Node2Config" />
Matched 1 blocks(33.33%) with 2 lines(1.49%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*<tag" -Q "\s*</tag" -i --nt "Node[13]" -t "Node\d+"  ## Must have only Node2 but not whole block 

msr -c -p sample-file.txt -b "^\s*<tag" -Q "^\s*</tag" -i --nt "Node[13]" -e "Node\d+"  ## Must have only Node2 and whole block 
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 title in body for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Matched 1 blocks(33.33%) with 12 lines(8.96%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*<tag" -Q "\s*</tag" -i --nt "Node[13]" -e "Node\d+"  ## Must have only Node2 and whole block 

msr -c -p sample-file.txt -b "^\s*<tag" -Q "^\s*</tag" -i --nt "Node[13]" -a -e "Node\d+" ## Must have only Node2 and whole block 
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 title in body for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Matched 1 blocks(33.33%) with 12 lines(8.96%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*<tag" -Q "\s*</tag" -i --nt "Node[13]" -a -e "Node\d+" ## Must have only Node2 and whole block 

msr -c -p sample-file.txt -b "^\s*<tag" -Q "^\s*</tag" -i --nt "Node[13]" -a -t "Node2"  ## Must have only Node2 and whole block 
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 title in body for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Matched 1 blocks(33.33%) with 2 lines(1.49%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*<tag" -Q "\s*</tag" -i --nt "Node[13]" -a -t "Node2"  ## Must have only Node2 and whole block 

msr -c -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t "Node[13]" --nx node3 -ai -x Node -o myNode  ## Must have only block Node1 and replaced 
sample-file.txt:47: <Tag Name="myNode1">
sample-file.txt:48:   <as::item ref="NodeCitOnly" />
sample-file.txt:49:   <as::item ref="myNode1Config" />
sample-file.txt:50:   <MailTo>Alex@abc.com</MailTo>
sample-file.txt:51:   <as::item ref="myNode1Body">
sample-file.txt:52:     <as::pairs>
sample-file.txt:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
sample-file.txt:54:       <as::pair name="Function">#FUNCTION#</as::pair>
sample-file.txt:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
sample-file.txt:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
sample-file.txt:57:     </as::pairs>
sample-file.txt:58:   </as::item>
sample-file.txt:59: </Tag>
Matched 1 blocks(33.33%) with 3 lines(2.24%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*<Tag" -Q "\s*</Tag" -t "Node[13]" --nx node3 -ai -x Node -o myNode  ## Must have only block Node1 and replaced 

msr -c -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</TagNotExist>" -a ## Should no blocks and output. 
Matched 0 blocks with 0 lines in 1 files
Return-Value = 0 : msr -c -p sample-file.txt -b "\s*<Tag" -Q "\s*</TagNotExist>" -a ## Should no blocks and output. 

msr -c -p sample-file.txt -ib "^\s*enum" -q "\};" -S -t "([\r\n]+)\s+" -o "$1  "  ## Single line regex matching 
sample-file.txt:7: enum class LineType {
  NotMatchedLine = 0,
  MatchedLine = 1,
  UpLine = 2,
  DownLine = 3
};
Matched 6 lines(50.00%) in 1 files(100%)
Return-Value = 6 : msr -c -p sample-file.txt -ib "\s*enum" -q "\};" -S -t "([\r\n]+)\s+" -o "$1  "  ## Single line regex matching 

msr -c -p sample-file.txt -ib "^\s*enum" -q "\};" -t "^\s+" -o "  " -a -P 
enum class LineType {
  NotMatchedLine = 0,
  MatchedLine = 1,
  UpLine = 2,
  DownLine = 3
};
Matched 4 lines(33.33%) in 1 files(100%)
Return-Value = 4 : msr -c -p sample-file.txt -ib "\s*enum" -q "\};" -t "\s+" -o "  " -a -P 

msr -c -p sample-file.txt -i -t "(Deferred\w*)" 
sample-file.txt:14: class DeferredRun {
sample-file.txt:16:         DeferredRun(const std::function<void()>& run) : _run(run) { }
sample-file.txt:17:         ~DeferredRun() {
sample-file.txt:28:         DeferredRun deferredRun([&]() {
Matched 4 lines(2.99%) in 1 files(100%)
Return-Value = 4 : msr -c -p sample-file.txt -i -t "(Deferred\w*)" 

msr -c -p sample-file.txt -it "(Deferred\w*)\s+\1" 
sample-file.txt:28:         DeferredRun deferredRun([&]() {
Matched 1 lines(0.75%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -it "(Deferred\w*)\s+\1" 

msr -c -p sample-file.txt -i -b "class DeferredRun" -Q "^};" -t "(Deferred\w*)" -o "$1Replaced" 
sample-file.txt:14: class DeferredRunReplaced {
sample-file.txt:16:         DeferredRunReplaced(const std::function<void()>& run) : _run(run) { }
sample-file.txt:17:         ~DeferredRunReplaced() {
Matched 1 blocks(100%) with 3 lines(2.24%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -i -b "class DeferredRun" -Q "};" -t "(Deferred\w*)" -o "$1Replaced" 

msr -c -p example-commands.bat -it "class|run" -H 9 
example-commands.bat:1: ::Just run windows-test.bat which calls this file, or run this file directly, you will get a vivid sense of msr.
example-commands.bat:48: msr -c -p %~dp0\sample-file.txt -i -b "class DeferredRun" -Q "^};" -t "(Deferred\w*)" -o "$1Replaced"
example-commands.bat:49: msr -c -p %~dp0\example-commands.bat -it "class|run" -H 9
example-commands.bat:50: msr -c -p %~dp0\example-commands.bat -ie "class|run" -H 9
Matched 4 lines(1.59%) in 1 files(100%)
Return-Value = 4 : msr -c -p example-commands.bat -it "class|run" -H 9 

msr -c -p example-commands.bat -ie "class|run" -H 9 
example-commands.bat:1: ::Just run windows-test.bat which calls this file, or run this file directly, you will get a vivid sense of msr.
example-commands.bat:2: msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -x \ -o \\
example-commands.bat:3: msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -t \\ -o \\
example-commands.bat:4: msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -t "\\\\" -o \\
example-commands.bat:5: msr -c -z www.lz.text/temp.normal/samples/my.normal/my-stream.xml -x normal/ -t "(www.*)/([^/]+\.xml)\s*"
example-commands.bat:6: 
example-commands.bat:7: msr -c -p %~dp0\sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End  Should return 0
example-commands.bat:8: msr -c -p %~dp0\sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End -l Should return 0
example-commands.bat:9: 
Matched 252 lines(100%) in 1 files(100%)
Return-Value = 252 : msr -c -p example-commands.bat -ie "class|run" -H 9 

msr -c -p example-commands.bat -it "^msr\s+(-c\s+)?" -L 3 -o "msr -c " -H 9 
example-commands.bat:3: msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -t \\ -o \\
example-commands.bat:4: msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -t "\\\\" -o \\
example-commands.bat:5: msr -c -z www.lz.text/temp.normal/samples/my.normal/my-stream.xml -x normal/ -t "(www.*)/([^/]+\.xml)\s*"
example-commands.bat:7: msr -c -p %~dp0\sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End  Should return 0
example-commands.bat:8: msr -c -p %~dp0\sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End -l Should return 0
example-commands.bat:10: msr -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0
example-commands.bat:11: msr -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0
example-commands.bat:13: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing
example-commands.bat:14: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing
Matched 207 lines(82.14%) in 1 files(100%)
Return-Value = 207 : msr -c -p example-commands.bat -it "msr\s+(-c\s+)?" -L 3 -o "msr -c " -H 9 

msr -c -p example-commands.bat -x bat -o BAT -L 3 -H 5 -T 5      ## Plain text replacing to BAT , begin-row-3, and show top 5 and bottom 5 lines 
example-commands.bat:18: msr -c -p %~dp0 -f BAT -l -PAC -H 0
example-commands.bat:19: msr -c -p %~dp0 -f BAT -l -PIC -H 0
example-commands.bat:20: msr -c -p %~dp0 -l -f BAT -H -2 # Should skip top 2 items.
example-commands.bat:21: msr -c -p %~dp0 -l -f BAT -T -2 # Should skip bottom 2 items.
example-commands.bat:22: msr -c -p %~dp0 -l -f BAT -H -2 --sz # Should skip top 2 items.
example-commands.bat:82: msr -c -p %~dp0\example-commands.BAT -ix update -t name -e Names
example-commands.bat:93: msr -c -p %~dp0\example-commands.BAT -x " -B" -t ".*?(\d+\S+ \d+[\d:]+).*"
example-commands.bat:97: msr -c -p %~dp0\example-commands.BAT -it "\w+" -H 0       ## Must NOT out any matched.
example-commands.bat:98: msr -c -p %~dp0\example-commands.BAT -it "\w+" -T 0       ## Must NOT out any matched.
example-commands.bat:99: msr -c -p %~dp0\example-commands.BAT -it just -U 3 -D 3
Matched 44 lines(17.46%) in 1 files(100%)
Return-Value = 44 : msr -c -p example-commands.bat -x bat -o BAT -L 3 -H 5 -T 5      ## Plain text replacing to BAT , begin-row-3, and show top 5 and bottom 5 lines 

msr -c -p example-commands.bat -t bat -o BAT -L 3 -H 5           ## Plain text replacing to BAT , begin-row-3, show top 5 lines 
example-commands.bat:18: msr -c -p %~dp0 -f BAT -l -PAC -H 0
example-commands.bat:19: msr -c -p %~dp0 -f BAT -l -PIC -H 0
example-commands.bat:20: msr -c -p %~dp0 -l -f BAT -H -2 # Should skip top 2 items.
example-commands.bat:21: msr -c -p %~dp0 -l -f BAT -T -2 # Should skip bottom 2 items.
example-commands.bat:22: msr -c -p %~dp0 -l -f BAT -H -2 --sz # Should skip top 2 items.
Matched 44 lines(17.46%) in 1 files(100%)
Return-Value = 44 : msr -c -p example-commands.bat -t bat -o BAT -L 3 -H 5           ## Plain text replacing to BAT , begin-row-3, show top 5 lines 

msr -c -p example-commands.bat -t com -x bat -o BAT T -H 5       ## Use both Regex and plain text , replacing from 
example-commands.bat:42: msr -c -r -p %~dp0 -f "^(example-commands|sample-file)\.(txt|BAT)$" -l --sz --wt -T 3
example-commands.bat:43: msr -c -r -p %~dp0 -f "^(example-commands|sample-file)\.(txt|BAT)$" -l --wt --sz -H 3 --dsc --s1 1KB --s2 1MB --w1 "2015-07-20 13:20"
example-commands.bat:49: msr -c -p %~dp0\example-commands.BAT -it "class|run" -H 9
example-commands.bat:50: msr -c -p %~dp0\example-commands.BAT -ie "class|run" -H 9
example-commands.bat:51: msr -c -p %~dp0\example-commands.BAT -it "^msr\s+(-c\s+)?" -L 3 -o "msr -c " -H 9
Matched 36 lines(14.29%) in 1 files(100%)
Return-Value = 36 : msr -c -p example-commands.bat -t com -x bat -o BAT T -H 5       ## Use both Regex and plain text , replacing from 

msr -c -p example-commands.bat -t t -L 9 -e txt -H 9             ## single char matching and coloring test 
example-commands.bat:10: msr -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0
example-commands.bat:11: msr -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0
example-commands.bat:13: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing
example-commands.bat:14: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing
example-commands.bat:15: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\n$" -H 0          # Check return value, output nothing
example-commands.bat:16: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1" -R   # Remove tail new line
example-commands.bat:17: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1\n" -R # Add a new line to tail
example-commands.bat:18: msr -c -p %~dp0 -f bat -l -PAC -H 0
example-commands.bat:19: msr -c -p %~dp0 -f bat -l -PIC -H 0
Matched 221 lines(87.70%) in 1 files(100%)
Return-Value = 221 : msr -c -p example-commands.bat -t t -L 9 -e txt -H 9             ## single char matching and coloring test 

msr -c -p example-commands.bat -x t -L 9 -e txt -H 9 
example-commands.bat:10: msr -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0
example-commands.bat:11: msr -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0
example-commands.bat:13: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing
example-commands.bat:14: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing
example-commands.bat:15: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\n$" -H 0          # Check return value, output nothing
example-commands.bat:16: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1" -R   # Remove tail new line
example-commands.bat:17: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1\n" -R # Add a new line to tail
example-commands.bat:18: msr -c -p %~dp0 -f bat -l -PAC -H 0
example-commands.bat:19: msr -c -p %~dp0 -f bat -l -PIC -H 0
Matched 221 lines(87.70%) in 1 files(100%)
Return-Value = 221 : msr -c -p example-commands.bat -x t -L 9 -e txt -H 9 

msr -c -p example-commands.bat -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile 
example-commands.bat:10: msr -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0
example-commands.bat:11: msr -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0
example-commands.bat:13: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing
example-commands.bat:14: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing
example-commands.bat:15: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\n$" -H 0          # Check return value, output nothing
example-commands.bat:16: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1" -R   # Remove tail new line
example-commands.bat:17: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1\n" -R # Add a new line to tail
example-commands.bat:18: msr -c -p %~dp0 -f bat -l -PAC -H 0
example-commands.bat:19: msr -c -p %~dp0 -f bat -l -PIC -H 0
Matched 221 lines(87.70%) in 1 files(100%)
Return-Value = 221 : msr -c -p example-commands.bat -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile 

msr -c -p example-commands.bat -x t -L 9 -e me.txt -H 9 
example-commands.bat:10: msr -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0
example-commands.bat:11: msr -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0
example-commands.bat:13: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing
example-commands.bat:14: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing
example-commands.bat:15: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\n$" -H 0          # Check return value, output nothing
example-commands.bat:16: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1" -R   # Remove tail new line
example-commands.bat:17: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1\n" -R # Add a new line to tail
example-commands.bat:18: msr -c -p %~dp0 -f bat -l -PAC -H 0
example-commands.bat:19: msr -c -p %~dp0 -f bat -l -PIC -H 0
Matched 221 lines(87.70%) in 1 files(100%)
Return-Value = 221 : msr -c -p example-commands.bat -x t -L 9 -e me.txt -H 9 

msr -c -p example-commands.bat -x me -L 20 -H 9 
example-commands.bat:57: msr -c -p %~dp0\example-commands.bat -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile
example-commands.bat:58: msr -c -p %~dp0\example-commands.bat -x t -L 9 -e me.txt -H 9
example-commands.bat:59: msr -c -p %~dp0\example-commands.bat -x me -L 20 -H 9
example-commands.bat:60: msr -c -p %~dp0\example-commands.bat -x me -L 20 -ie me -H 9
example-commands.bat:61: msr -c -p %~dp0\example-commands.bat -t me -L 20 -ie me -H 9
example-commands.bat:62: msr -c -p %~dp0\example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:63: msr -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:64: msr -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
example-commands.bat:65: msr -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9
Matched 33 lines(13.10%) in 1 files(100%)
Return-Value = 33 : msr -c -p example-commands.bat -x me -L 20 -H 9 

msr -c -p example-commands.bat -x me -L 20 -ie me -H 9 
example-commands.bat:57: msr -c -p %~dp0\example-commands.bat -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile
example-commands.bat:58: msr -c -p %~dp0\example-commands.bat -x t -L 9 -e me.txt -H 9
example-commands.bat:59: msr -c -p %~dp0\example-commands.bat -x me -L 20 -H 9
example-commands.bat:60: msr -c -p %~dp0\example-commands.bat -x me -L 20 -ie me -H 9
example-commands.bat:61: msr -c -p %~dp0\example-commands.bat -t me -L 20 -ie me -H 9
example-commands.bat:62: msr -c -p %~dp0\example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:63: msr -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:64: msr -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
example-commands.bat:65: msr -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9
Matched 33 lines(13.10%) in 1 files(100%)
Return-Value = 33 : msr -c -p example-commands.bat -x me -L 20 -ie me -H 9 

msr -c -p example-commands.bat -t me -L 20 -ie me -H 9 
example-commands.bat:57: msr -c -p %~dp0\example-commands.bat -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile
example-commands.bat:58: msr -c -p %~dp0\example-commands.bat -x t -L 9 -e me.txt -H 9
example-commands.bat:59: msr -c -p %~dp0\example-commands.bat -x me -L 20 -H 9
example-commands.bat:60: msr -c -p %~dp0\example-commands.bat -x me -L 20 -ie me -H 9
example-commands.bat:61: msr -c -p %~dp0\example-commands.bat -t me -L 20 -ie me -H 9
example-commands.bat:62: msr -c -p %~dp0\example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:63: msr -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:64: msr -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
example-commands.bat:65: msr -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9
Matched 33 lines(13.10%) in 1 files(100%)
Return-Value = 33 : msr -c -p example-commands.bat -t me -L 20 -ie me -H 9 

msr -c -p example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9 
example-commands.bat:57: msr -c -p %~dp0\example-commands.bat -t t -L 9 -e you.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text youanwhile
example-commands.bat:58: msr -c -p %~dp0\example-commands.bat -x t -L 9 -e you.txt -H 9
example-commands.bat:59: msr -c -p %~dp0\example-commands.bat -x you -L 20 -H 9
example-commands.bat:60: msr -c -p %~dp0\example-commands.bat -x you -L 20 -ie you -H 9
example-commands.bat:61: msr -c -p %~dp0\example-commands.bat -t you -L 20 -ie you -H 9
example-commands.bat:62: msr -c -p %~dp0\example-commands.bat -x you -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:63: msr -c -p %~dp0\example-commands.bat -t you -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:64: msr -c -p %~dp0\example-commands.bat -t you -ie "you|ping|\w+.txt" -L 30 -H 9
example-commands.bat:65: msr -c -p %~dp0\example-commands.bat -x you -ie "you|ping|\w+.txt" -L 30 -H 9
Matched 33 lines(13.10%) in 1 files(100%)
Return-Value = 33 : msr -c -p example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9 

msr -c -p example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9 
example-commands.bat:57: msr -c -p %~dp0\example-commands.bat -t t -L 9 -e you.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text youanwhile
example-commands.bat:58: msr -c -p %~dp0\example-commands.bat -x t -L 9 -e you.txt -H 9
example-commands.bat:59: msr -c -p %~dp0\example-commands.bat -x you -L 20 -H 9
example-commands.bat:60: msr -c -p %~dp0\example-commands.bat -x you -L 20 -ie you -H 9
example-commands.bat:61: msr -c -p %~dp0\example-commands.bat -t you -L 20 -ie you -H 9
example-commands.bat:62: msr -c -p %~dp0\example-commands.bat -x you -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:63: msr -c -p %~dp0\example-commands.bat -t you -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:64: msr -c -p %~dp0\example-commands.bat -t you -ie "you|ping|\w+.txt" -L 30 -H 9
example-commands.bat:65: msr -c -p %~dp0\example-commands.bat -x you -ie "you|ping|\w+.txt" -L 30 -H 9
Matched 33 lines(13.10%) in 1 files(100%)
Return-Value = 33 : msr -c -p example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9 

msr -c -p example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9 
example-commands.bat:57: msr -c -p %~dp0\example-commands.bat -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile
example-commands.bat:58: msr -c -p %~dp0\example-commands.bat -x t -L 9 -e me.txt -H 9
example-commands.bat:59: msr -c -p %~dp0\example-commands.bat -x me -L 20 -H 9
example-commands.bat:60: msr -c -p %~dp0\example-commands.bat -x me -L 20 -ie me -H 9
example-commands.bat:61: msr -c -p %~dp0\example-commands.bat -t me -L 20 -ie me -H 9
example-commands.bat:62: msr -c -p %~dp0\example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:63: msr -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:64: msr -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
example-commands.bat:65: msr -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9
Matched 33 lines(13.10%) in 1 files(100%)
Return-Value = 33 : msr -c -p example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9 

msr -c -p example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9 
example-commands.bat:57: msr -c -p %~dp0\example-commands.bat -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile
example-commands.bat:58: msr -c -p %~dp0\example-commands.bat -x t -L 9 -e me.txt -H 9
example-commands.bat:59: msr -c -p %~dp0\example-commands.bat -x me -L 20 -H 9
example-commands.bat:60: msr -c -p %~dp0\example-commands.bat -x me -L 20 -ie me -H 9
example-commands.bat:61: msr -c -p %~dp0\example-commands.bat -t me -L 20 -ie me -H 9
example-commands.bat:62: msr -c -p %~dp0\example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:63: msr -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:64: msr -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
example-commands.bat:65: msr -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9
Matched 33 lines(13.10%) in 1 files(100%)
Return-Value = 33 : msr -c -p example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9 

msr -c -p example-commands.bat -x name -o NAME -ie "name|come" -U 3 -D 3 -L 16 -H 9 
example-commands.bat:63: msr -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:64: msr -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
example-commands.bat:65: msr -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9
example-commands.bat:66: msr -c -p %~dp0\example-commands.bat -x NAME -o NAME -ie "NAME|come" -U 3 -D 3 -L 16 -H 9
example-commands.bat:67: msr -c -p %~dp0\example-commands.bat -t NAME -o NAME -ie NAMEs -H 9
example-commands.bat:68: msr -c -p %~dp0\example-commands.bat -t NAME -o NAME -T 1 -C
example-commands.bat:69: msr -c -p %~dp0\example-commands.bat -it NAME -l
example-commands.bat:70: msr -c -p %~dp0\sample-file.txt -it NAME -l
example-commands.bat:71: msr -c -p %~dp0\example-commands.bat -t NAME -a -o NAME -ie NAMEs -b "come|NAME\w*" -Q "mailTo|Tag" -T 9
Matched 24 lines(9.52%) in 1 files(100%)
Return-Value = 24 : msr -c -p example-commands.bat -x name -o NAME -ie "name|come" -U 3 -D 3 -L 16 -H 9 

msr -c -p example-commands.bat -t name -o NAME -ie Names -H 9 
example-commands.bat:66: msr -c -p %~dp0\example-commands.bat -x NAME -o NAME -ie "NAME|come" -U 3 -D 3 -L 16 -H 9
example-commands.bat:67: msr -c -p %~dp0\example-commands.bat -t NAME -o NAME -ie NAMEs -H 9
example-commands.bat:68: msr -c -p %~dp0\example-commands.bat -t NAME -o NAME -T 1 -C
example-commands.bat:69: msr -c -p %~dp0\example-commands.bat -it NAME -l
example-commands.bat:70: msr -c -p %~dp0\sample-file.txt -it NAME -l
example-commands.bat:71: msr -c -p %~dp0\example-commands.bat -t NAME -a -o NAME -ie NAMEs -b "come|NAME\w*" -Q "mailTo|Tag" -T 9
example-commands.bat:73: msr -c -p %~dp0\example-commands.bat -x NAME -o NAME -ie "NAME|come" -T 3
example-commands.bat:74: msr -c -p %~dp0\example-commands.bat -t NAME -o come -ie "NAME|come" -a -L 19 -H 9
example-commands.bat:75: msr -c -p %~dp0\example-commands.bat -t NAME -a -o NAM -ie "NAME|come" -L 19 -H 9
Matched 24 lines(9.52%) in 1 files(100%)
Return-Value = 24 : msr -c -p example-commands.bat -t name -o NAME -ie Names -H 9 

msr -c -p example-commands.bat -t name -o NAME -T 1 -C 
example-commands.bat:249: msr -c -p Node1.tmp -PA -e ".All.|4000|8000"  ## This is an expanded xml that has replaced NAME value settings.
Matched 19 lines(7.54%) in 1 files(100%)
Return-Value = 19 : msr -c -p example-commands.bat -t name -o NAME -T 1 -C 

msr -c -p example-commands.bat -it name -l 
1-1 : example-commands.bat
Matched 24 lines(9.52%) in 1 files(100%)
Return-Value = 24 : msr -c -p example-commands.bat -it name -l 

msr -c -p sample-file.txt -it name -l 
1-1 : sample-file.txt
Matched 10 lines(7.46%) in 1 files(100%)
Return-Value = 10 : msr -c -p sample-file.txt -it name -l 

msr -c -p example-commands.bat -t name -a -o NAME -ie Names -b "come|name\w*" -Q "mailTo|Tag" -T 9 
example-commands.bat:123: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[" -t key -a
example-commands.bat:124: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[" -t key -a -y
example-commands.bat:125: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[" -a
example-commands.bat:126: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -a -y
example-commands.bat:127: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -a
example-commands.bat:128: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -a -y
example-commands.bat:129: msr -c -p %~dp0\sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" --nt Node3 -a
example-commands.bat:246: msr -c -p %~dp0\sample-file.txt -b "<Tag NAME.*?Node1.*?>" -Q "</Tag>" -PA -e "#\S+?#"
example-commands.bat:247: msr -c -p %~dp0\sample-file.txt -b "<Tag NAME.*?Node1.*?>" -Q "</Tag>" -PIC > Node1.tmp
Matched 7 blocks(87.50%) with 22 lines(8.73%) in 1 files(100%)
Return-Value = 7 : msr -c -p example-commands.bat -t name -a -o NAME -ie Names -b "come|name\w*" -Q "mailTo|Tag" -T 9 

msr -c -p example-commands.bat -it NOT -U 2 -e "SRC|DIR" -H 5 
example-commands.bat:11: msr -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0
example-commands.bat:12: 
example-commands.bat:13: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing
example-commands.bat:14: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing
example-commands.bat:15: msr -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\n$" -H 0          # Check return value, output nothing
Matched 14 lines(5.56%) in 1 files(100%)
Return-Value = 14 : msr -c -p example-commands.bat -it NOT -U 2 -e "SRC|DIR" -H 5 

msr -c -p example-commands.bat -x name -o NAME -ie "name|come" -T 3 
example-commands.bat:247: msr -c -p %~dp0\sample-file.txt -b "<Tag NAME.*?Node1.*?>" -Q "</Tag>" -PIC > Node1.tmp
example-commands.bat:248: (msr -c -p %~dp0\sample-file.txt -it "<NAME>(#.+?#)</NAME>\s*<value>(.+?)</value>" -S -o "msr -x \"$1\" -o \"$2\""  -PAC | msr -t "^\s*(msr -x .*)" -o "$1 -p Node1.tmp -R -H 0" -PAC) |msr -XI -c Automatic extract macro and replace to real values.
example-commands.bat:249: msr -c -p Node1.tmp -PA -e ".All.|4000|8000"  ## This is an expanded xml that has replaced NAME value settings.
Matched 24 lines(9.52%) in 1 files(100%)
Return-Value = 24 : msr -c -p example-commands.bat -x name -o NAME -ie "name|come" -T 3 

msr -c -p example-commands.bat -t name -o come -ie "name|come" -a -L 19 -H 9 
example-commands.bat:19: msr -c -p %~dp0 -f bat -l -PIC -H 0
example-commands.bat:20: msr -c -p %~dp0 -l -f bat -H -2 # Should skip top 2 items.
example-commands.bat:21: msr -c -p %~dp0 -l -f bat -T -2 # Should skip bottom 2 items.
example-commands.bat:22: msr -c -p %~dp0 -l -f bat -H -2 --sz # Should skip top 2 items.
example-commands.bat:23: msr -c -p %~dp0 -l -f bat -T -2 --wt # Should skip bottom 2 items.
example-commands.bat:24: msr -c -p %~dp0 -l -f bat -H 2 --wt # Should show top 2 items.
example-commands.bat:25: msr -c -p %~dp0 -l -f bat -T 2 # Should show bottom 2 items.
example-commands.bat:26: msr -c -p %~dp0\sample-file.txt -L 7 -N 9 -t Not -U 2 -D 2
example-commands.bat:27: msr -c -p %~dp0\sample-file.txt -it node --nt "node\d+"
Matched 24 lines(9.52%) in 1 files(100%)
Return-Value = 24 : msr -c -p example-commands.bat -t name -o come -ie "name|come" -a -L 19 -H 9 

msr -c -p example-commands.bat -t name -a -o NAM -ie "name|come" -L 19 -H 9 
example-commands.bat:19: msr -c -p %~dp0 -f bat -l -PIC -H 0
example-commands.bat:20: msr -c -p %~dp0 -l -f bat -H -2 # Should skip top 2 items.
example-commands.bat:21: msr -c -p %~dp0 -l -f bat -T -2 # Should skip bottom 2 items.
example-commands.bat:22: msr -c -p %~dp0 -l -f bat -H -2 --sz # Should skip top 2 items.
example-commands.bat:23: msr -c -p %~dp0 -l -f bat -T -2 --wt # Should skip bottom 2 items.
example-commands.bat:24: msr -c -p %~dp0 -l -f bat -H 2 --wt # Should show top 2 items.
example-commands.bat:25: msr -c -p %~dp0 -l -f bat -T 2 # Should show bottom 2 items.
example-commands.bat:26: msr -c -p %~dp0\sample-file.txt -L 7 -N 9 -t Not -U 2 -D 2
example-commands.bat:27: msr -c -p %~dp0\sample-file.txt -it node --nt "node\d+"
Matched 24 lines(9.52%) in 1 files(100%)
Return-Value = 24 : msr -c -p example-commands.bat -t name -a -o NAM -ie "name|come" -L 19 -H 9 

msr -c -p example-commands.bat -x name -o NAME -ie "name|come" -t not -U 3 -D 3 
example-commands.bat:73: msr -c -p %~dp0\example-commands.bat -x name -o NAME -ie "name|come" -T 3
example-commands.bat:74: msr -c -p %~dp0\example-commands.bat -t name -o come -ie "name|come" -a -L 19 -H 9
example-commands.bat:75: msr -c -p %~dp0\example-commands.bat -t name -a -o NAM -ie "name|come" -L 19 -H 9
example-commands.bat:76: msr -c -p %~dp0\example-commands.bat -x NAME -o NAME -ie "NAME|come" -t not -U 3 -D 3
example-commands.bat:77: msr -c -p %~dp0\sample-file.txt -ib "<Tag Name.*?\b(Node1|Node2)\b" -Q "<MailAddress>|</Tag>" -e "MailTo" -t body -o BODY -a
example-commands.bat:78: msr -c -p %~dp0\sample-file.txt -ib "<Tag Name.*?\b(Node2)\b" -Q "<MailAddress>|</Tag>" -e MailTo -t body -o BODY -a
example-commands.bat:79: msr -c -p %~dp0\sample-file.txt -ib "<Tag Name.*?\b(\w+)\b" -Q "<MailAddress>|</Tag>" -t Node1 -e "<.?Tag.*?>" -a
Matched 1 lines(0.40%) in 1 files(100%)
Return-Value = 1 : msr -c -p example-commands.bat -x name -o NAME -ie "name|come" -t not -U 3 -D 3 

msr -c -p sample-file.txt -ib "<Tag Name.*?\b(Node1|Node2)\b" -Q "<MailAddress>|</Tag>" -e "MailTo" -t body -o BODY -a 
sample-file.txt:47: <Tag Name="Node1">
sample-file.txt:48:   <as::item ref="NodeCitOnly" />
sample-file.txt:49:   <as::item ref="Node1Config" />
sample-file.txt:50:   <MailTo>Alex@abc.com</MailTo>
sample-file.txt:51:   <as::item ref="Node1BODY">
sample-file.txt:52:     <as::pairs>
sample-file.txt:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
sample-file.txt:54:       <as::pair name="Function">#FUNCTION#</as::pair>
sample-file.txt:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
sample-file.txt:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
sample-file.txt:57:     </as::pairs>
sample-file.txt:58:   </as::item>
sample-file.txt:59: </Tag>
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 title in BODY for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Matched 2 blocks(100%) with 2 lines(1.49%) in 1 files(100%)
Return-Value = 2 : msr -c -p sample-file.txt -ib "<Tag Name.*?\b(Node1|Node2)\b" -Q "<MailAddress>|</Tag>" -e "MailTo" -t body -o BODY -a 

msr -c -p sample-file.txt -ib "<Tag Name.*?\b(Node2)\b" -Q "<MailAddress>|</Tag>" -e MailTo -t body -o BODY -a 
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 title in BODY for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Matched 1 blocks(100%) with 1 lines(0.75%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -ib "<Tag Name.*?\b(Node2)\b" -Q "<MailAddress>|</Tag>" -e MailTo -t body -o BODY -a 

msr -c -p sample-file.txt -ib "<Tag Name.*?\b(\w+)\b" -Q "<MailAddress>|</Tag>" -t Node1 -e "<.?Tag.*?>" -a 
sample-file.txt:47: <Tag Name="Node1">
sample-file.txt:48:   <as::item ref="NodeCitOnly" />
sample-file.txt:49:   <as::item ref="Node1Config" />
sample-file.txt:50:   <MailTo>Alex@abc.com</MailTo>
sample-file.txt:51:   <as::item ref="Node1Body">
sample-file.txt:52:     <as::pairs>
sample-file.txt:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
sample-file.txt:54:       <as::pair name="Function">#FUNCTION#</as::pair>
sample-file.txt:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
sample-file.txt:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
sample-file.txt:57:     </as::pairs>
sample-file.txt:58:   </as::item>
sample-file.txt:59: </Tag>
Matched 1 blocks(33.33%) with 3 lines(2.24%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -ib "<Tag Name.*?\b(\w+)\b" -Q "<MailAddress>|</Tag>" -t Node1 -e "<.?Tag.*?>" -a 

msr -c -p example-commands.bat -it name -o NAME -e Names -x update 
example-commands.bat:80: msr -c -p %~dp0\example-commands.bat -it NAME -o NAME -e NAMEs -x update
example-commands.bat:82: msr -c -p %~dp0\example-commands.bat -ix update -t NAME -e NAMEs
Matched 2 lines(0.79%) in 1 files(100%)
Return-Value = 2 : msr -c -p example-commands.bat -it name -o NAME -e Names -x update 

msr -c -p example-commands.bat -it name -e Names -x nameX 
example-commands.bat:81: msr -c -p %~dp0\example-commands.bat -it name -e Names -x nameX
Matched 1 lines(0.40%) in 1 files(100%)
Return-Value = 1 : msr -c -p example-commands.bat -it name -e Names -x nameX 

msr -c -p example-commands.bat -ix update -t name -e Names 
example-commands.bat:80: msr -c -p %~dp0\example-commands.bat -it name -o NAME -e Names -x update
example-commands.bat:82: msr -c -p %~dp0\example-commands.bat -ix update -t name -e Names
Matched 2 lines(0.79%) in 1 files(100%)
Return-Value = 2 : msr -c -p example-commands.bat -ix update -t name -e Names 

msr -c -p sample-file.txt -ib "<Tag name" -q "Switch" -Q "</Tag" -t MailTo -e Switch 
sample-file.txt:50:   <MailTo>Alex@abc.com</MailTo>
sample-file.txt:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
Matched 1 blocks(100%) with 2 lines(3.57%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -ib "<Tag name" -q "Switch" -Q "</Tag" -t MailTo -e Switch 

msr -c -p sample-file.txt -ib "<Tag name" -q "Switch" -Q "</Tag" -t MailTo -e Switch -a 
sample-file.txt:47: <Tag Name="Node1">
sample-file.txt:48:   <as::item ref="NodeCitOnly" />
sample-file.txt:49:   <as::item ref="Node1Config" />
sample-file.txt:50:   <MailTo>Alex@abc.com</MailTo>
sample-file.txt:51:   <as::item ref="Node1Body">
sample-file.txt:52:     <as::pairs>
sample-file.txt:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
sample-file.txt:54:       <as::pair name="Function">#FUNCTION#</as::pair>
sample-file.txt:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
sample-file.txt:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
Matched 1 blocks(100%) with 2 lines(3.57%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -ib "<Tag name" -q "Switch" -Q "</Tag" -t MailTo -e Switch -a 

msr -c -p sample-file.txt -it "<name>(#.+?)</name>\s*<value>(.+?)</value>" -S -o "msr -x \"$1\" -o \"$2\"" -L 14 -e "-x (\S+)|-o (\S+)|msr " -q "block" 
sample-file.txt:14: class DeferredRun {
public:
        DeferredRun(const std::function<void()>& run) : _run(run) { }
        ~DeferredRun() {
                _run();
        }
private:
        const std::function<void()> _run;
};

int main(int argc, char* argv[])
{
        auto hFile = OpenHandle(argv[1]);

        DeferredRun deferredRun([&]() {
                CloseHandle(hFile);
        });
}

<pair>
    msr -x "#FUNCTION#" -o "'All'"
</pair>
<pair>
    msr -x "#THRESHOLD_1#" -o "4000"
</pair>
<pair>
    msr -x "#THRESHOLD_2#" -o "8000"
</pair>


<Tag Name="Node1">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node1Config" />
  <MailTo>Alex@abc.com</MailTo>
  <as::item ref="Node1Body">
    <as::pairs>
      <as::pair name="MailTo">Bob@abc.com</as::pair>
      <as::pair name="Function">#FUNCTION#</as::pair>
      <as::pair name="Interval">#THRESHOLD_1#</as::pair>
      <as::pair name="Switch">#THRESHOLD_2#</as::pair>
    </as::pairs>
  </as::item>
</Tag>

<Tag Name="Node2">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node2Config" />

  <MailTo>Bob@abc.com</MailTo>
  <SubArgs />
  <Subject>Node 2 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>HB</HBrgetHost>
    <Type>BBB</Type>
  </Hosts>
</Tag>

<Tag Name="Node3">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node3Config" />

  <MailTo>Clark@abc.com</MailTo>
  <AllowReTry>true</AllowReTry>
  <SubArgs>
    <SubArg>HBase</SubArg>
  </SubArgs>
  <Subject>Node3 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>LZHOST</HBrgetHost>
  </Hosts>
</Tag>

--- arbitrary block to match replace  ----------
Matched 76 lines(85.39%) in 1 files(100%)
Return-Value = 76 : msr -c -p sample-file.txt -it "<name>(#.+?)</name>\s*<value>(.+?)</value>" -S -o "msr -x \"$1\" -o \"$2\"" -L 14 -e "-x (\S+)|-o (\S+)|msr " -q "block" 

msr -c -p sample-file.txt -it Tag -x ref -U 5 -D 5 
Matched 0 lines in 0 files
Return-Value = 0 : msr -c -p sample-file.txt -it Tag -x ref -U 5 -D 5 

msr -c -p sample-file.txt -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:03" 
sample-file.txt:3: 2012-12-27 00:03:03.333 third  line time at 3
sample-file.txt:4: 2012-12-27 00:04:04.444 forth  line time at 4
sample-file.txt:5: 2012-12-27 00:05:05.555 fifth  line time at 5
Matched 3 lines(2.24%) in 1 files(100%)
Return-Value = 3 : msr -c -p sample-file.txt -t "(\d+-\d+-\d+)" -F "(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:03" 

msr -c -p sample-file.txt -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -E "2012-12-27 00:03" 
sample-file.txt:2: 2012-12-27 00:01:01.111 second line time at 1
sample-file.txt:1: 2012-12-27 00:02:02.222 first  line time at 2
Matched 2 lines(66.67%) in 1 files(100%)
Return-Value = 2 : msr -c -p sample-file.txt -t "(\d+-\d+-\d+)" -F "(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -E "2012-12-27 00:03" 

msr -c -p sample-file.txt -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -q "2012-12-27 00:03" 
sample-file.txt:2: 2012-12-27 00:01:01.111 second line time at 1
sample-file.txt:1: 2012-12-27 00:02:02.222 first  line time at 2
sample-file.txt:3: 2012-12-27 00:03:03.333 third  line time at 3
Matched 3 lines(100%) in 1 files(100%)
Return-Value = 3 : msr -c -p sample-file.txt -t "(\d+-\d+-\d+)" -F "(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -q "2012-12-27 00:03" 

msr -c -p sample-file.txt -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -q "2012-12-27|03" 
sample-file.txt:1: 2012-12-27 00:02:02.222 first  line time at 2
Matched 1 lines(100%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -t "(\d+-\d+-\d+)" -F "(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -q "2012-12-27|03" 

msr -c -p sample-file.txt -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:00" -E "2012-12-27 00:03" 
sample-file.txt:2: 2012-12-27 00:01:01.111 second line time at 1
sample-file.txt:1: 2012-12-27 00:02:02.222 first  line time at 2
Matched 2 lines(66.67%) in 1 files(100%)
Return-Value = 2 : msr -c -p sample-file.txt -t "(\d+-\d+-\d+)" -F "(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:00" -E "2012-12-27 00:03" 

msr -c -p sample-file.txt -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:00" -E "2012-12-27 00:03" -it first 
sample-file.txt:1: 2012-12-27 00:02:02.222 first  line time at 2
Matched 1 lines(33.33%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -F "(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:00" -E "2012-12-27 00:03" -it first 

msr -c -p example-commands.bat -x " -B" -t ".*?(\d+\S+ \d+[\d:]+).*" 
example-commands.bat:87: msr -c -p %~dp0\sample-file.txt -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:03"
example-commands.bat:91: msr -c -p %~dp0\sample-file.txt -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:00" -E "2012-12-27 00:03"
example-commands.bat:92: msr -c -p %~dp0\sample-file.txt -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:00" -E "2012-12-27 00:03" -it first
Matched 3 lines(1.19%) in 1 files(100%)
Return-Value = 3 : msr -c -p example-commands.bat -x " -B" -t ".*?(\d+\S+ \d+[\d:]+).*" 

msr -c -p sample-file.txt -s "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -it 2012 
sample-file.txt:2: 2012-12-27 00:01:01.111 second line time at 1
sample-file.txt:1: 2012-12-27 00:02:02.222 first  line time at 2
sample-file.txt:3: 2012-12-27 00:03:03.333 third  line time at 3
sample-file.txt:4: 2012-12-27 00:04:04.444 forth  line time at 4
sample-file.txt:5: 2012-12-27 00:05:05.555 fifth  line time at 5
Matched 5 lines(3.73%) in 1 files(100%)
Return-Value = 5 : msr -c -p sample-file.txt -s "(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -it 2012 

msr -c -p sample-file.txt -t "^((((((\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+))))))(\S*)" -s "^\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+" -e "\d+|(\w+)\s+line" 
sample-file.txt:2: 2012-12-27 00:01:01.111 second line time at 1
sample-file.txt:1: 2012-12-27 00:02:02.222 first  line time at 2
sample-file.txt:3: 2012-12-27 00:03:03.333 third  line time at 3
sample-file.txt:4: 2012-12-27 00:04:04.444 forth  line time at 4
sample-file.txt:5: 2012-12-27 00:05:05.555 fifth  line time at 5
Matched 5 lines(3.73%) in 1 files(100%)
Return-Value = 5 : msr -c -p sample-file.txt -t "((((((\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+))))))(\S*)" -s "\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+" -e "\d+|(\w+)\s+line" 

msr -c -p sample-file.txt -t "^((((((\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+))))))(\S*)" -s "^\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+" -e "\d+|(\w+)\s+line" --dsc 
sample-file.txt:5: 2012-12-27 00:05:05.555 fifth  line time at 5
sample-file.txt:4: 2012-12-27 00:04:04.444 forth  line time at 4
sample-file.txt:3: 2012-12-27 00:03:03.333 third  line time at 3
sample-file.txt:1: 2012-12-27 00:02:02.222 first  line time at 2
sample-file.txt:2: 2012-12-27 00:01:01.111 second line time at 1
Matched 5 lines(3.73%) in 1 files(100%)
Return-Value = 5 : msr -c -p sample-file.txt -t "((((((\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+))))))(\S*)" -s "\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+" -e "\d+|(\w+)\s+line" --dsc 

msr -c -p example-commands.bat -it "\w+" -H 0       ## Must NOT out any matched. 
Matched 230 lines(91.27%) in 1 files(100%)
Return-Value = 230 : msr -c -p example-commands.bat -it "\w+" -H 0       ## Must NOT out any matched. 

msr -c -p example-commands.bat -it "\w+" -T 0       ## Must NOT out any matched. 
Matched 230 lines(91.27%) in 1 files(100%)
Return-Value = 230 : msr -c -p example-commands.bat -it "\w+" -T 0       ## Must NOT out any matched. 

msr -c -p example-commands.bat -it just -U 3 -D 3 
example-commands.bat:1: ::Just run windows-test.bat which calls this file, or run this file directly, you will get a vivid sense of msr.
example-commands.bat:2: msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -x \ -o \\
example-commands.bat:3: msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -t \\ -o \\
example-commands.bat:4: msr -c -z "c:\Program Files\LLVM\bin\clang.exe" -t "\\\\" -o \\
example-commands.bat:96: msr -c -p %~dp0\sample-file.txt -t "^((((((\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+))))))(\S*)" -s "^\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+" -e "\d+|(\w+)\s+line" --dsc
example-commands.bat:97: msr -c -p %~dp0\example-commands.bat -it "\w+" -H 0       ## Must NOT out any matched.
example-commands.bat:98: msr -c -p %~dp0\example-commands.bat -it "\w+" -T 0       ## Must NOT out any matched.
example-commands.bat:99: msr -c -p %~dp0\example-commands.bat -it just -U 3 -D 3
example-commands.bat:100: msr -c -p %~dp0\sample-file.txt -it "\W(function)\W" -e "name=(\S+)"
example-commands.bat:101: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 92
example-commands.bat:102: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 93
Matched 2 lines(0.79%) in 1 files(100%)
Return-Value = 2 : msr -c -p example-commands.bat -it just -U 3 -D 3 

msr -c -p sample-file.txt -it "\W(function)\W" -e "name=(\S+)" 
sample-file.txt:16:         DeferredRun(const std::function<void()>& run) : _run(run) { }
sample-file.txt:21:         const std::function<void()> _run;
sample-file.txt:34:     <Name>#FUNCTION#</Name>
sample-file.txt:54:       <as::pair name="Function">#FUNCTION#</as::pair>
Matched 4 lines(2.99%) in 1 files(100%)
Return-Value = 4 : msr -c -p sample-file.txt -it "\W(function)\W" -e "name=(\S+)" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 92 
Matched 0 blocks with 0 lines in 1 files
Return-Value = 0 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -N 92 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 93 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
Matched 1 blocks(100%) with 4 lines(4.30%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -N 93 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 96 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
Matched 1 blocks(50.00%) with 4 lines(4.17%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -N 96 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 97 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
sample-file.txt:94: [section2]
sample-file.txt:95: key1=value1
sample-file.txt:96: key=value
sample-file.txt:97: 
Matched 2 blocks(100%) with 8 lines(8.25%) in 1 files(100%)
Return-Value = 2 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -N 97 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 100 -L 90 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
sample-file.txt:94: [section2]
sample-file.txt:95: key1=value1
sample-file.txt:96: key=value
sample-file.txt:97: 
sample-file.txt:98: [section3]
sample-file.txt:99: key=value
sample-file.txt:100: 
Matched 3 blocks(100%) with 11 lines(11.00%) in 1 files(100%)
Return-Value = 3 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -N 100 -L 90 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 100 -L 91 
sample-file.txt:94: [section2]
sample-file.txt:95: key1=value1
sample-file.txt:96: key=value
sample-file.txt:97: 
sample-file.txt:98: [section3]
sample-file.txt:99: key=value
sample-file.txt:100: 
Matched 2 blocks(100%) with 7 lines(7.00%) in 1 files(100%)
Return-Value = 2 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -N 100 -L 91 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 99 -it key2 -a 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
Matched 1 blocks(33.33%) with 1 lines(1.01%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 90 -N 99 -it key2 -a 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 100 -it key2 -a 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
Matched 1 blocks(33.33%) with 1 lines(1.00%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 90 -N 100 -it key2 -a 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 100 -it key2 -a -o KEY 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: KEY=value2
sample-file.txt:93: 
Matched 1 blocks(33.33%) with 1 lines(1.00%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 90 -N 100 -it key2 -a -o KEY 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 100 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
sample-file.txt:94: [section2]
sample-file.txt:95: key1=value1
sample-file.txt:96: key=value
sample-file.txt:97: 
sample-file.txt:98: [section3]
sample-file.txt:99: key=value
sample-file.txt:100: 
Matched 3 blocks(100%) with 11 lines(11.00%) in 1 files(100%)
Return-Value = 3 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -N 100 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 101 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
sample-file.txt:94: [section2]
sample-file.txt:95: key1=value1
sample-file.txt:96: key=value
sample-file.txt:97: 
sample-file.txt:98: [section3]
sample-file.txt:99: key=value
sample-file.txt:100: 
Matched 3 blocks(100%) with 11 lines(10.89%) in 1 files(100%)
Return-Value = 3 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -N 101 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 102 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
sample-file.txt:94: [section2]
sample-file.txt:95: key1=value1
sample-file.txt:96: key=value
sample-file.txt:97: 
sample-file.txt:98: [section3]
sample-file.txt:99: key=value
sample-file.txt:100: 
sample-file.txt:101: [section4]
sample-file.txt:102: 
Matched 4 blocks(100%) with 13 lines(12.75%) in 1 files(100%)
Return-Value = 4 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -N 102 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 103 -N 110 
sample-file.txt:103: [section5]
sample-file.txt:104: key1=value1
sample-file.txt:105: key2=value2
sample-file.txt:106: [section6]
Matched 1 blocks(50.00%) with 4 lines(3.64%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 103 -N 110 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 103 -N 111 
sample-file.txt:103: [section5]
sample-file.txt:104: key1=value1
sample-file.txt:105: key2=value2
sample-file.txt:106: [section6]
sample-file.txt:109: [section7]
sample-file.txt:110: key=value
sample-file.txt:111: [section8]
Matched 2 blocks(100%) with 7 lines(6.31%) in 1 files(100%)
Return-Value = 2 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 103 -N 111 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 109 
sample-file.txt:109: [section7]
sample-file.txt:110: key=value
sample-file.txt:111: [section8]
sample-file.txt:112: [section9]
sample-file.txt:113: 
Matched 2 blocks(100%) with 5 lines(3.73%) in 1 files(100%)
Return-Value = 2 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 109 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 109 -N 111 
sample-file.txt:109: [section7]
sample-file.txt:110: key=value
sample-file.txt:111: [section8]
Matched 1 blocks(100%) with 3 lines(2.70%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 109 -N 111 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 109 -N 112 
sample-file.txt:109: [section7]
sample-file.txt:110: key=value
sample-file.txt:111: [section8]
Matched 1 blocks(100%) with 3 lines(2.68%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 109 -N 112 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 109 -N 113 
sample-file.txt:109: [section7]
sample-file.txt:110: key=value
sample-file.txt:111: [section8]
sample-file.txt:112: [section9]
sample-file.txt:113: 
Matched 2 blocks(100%) with 5 lines(4.42%) in 1 files(100%)
Return-Value = 2 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 109 -N 113 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 111 -y 
sample-file.txt:111: [section8]
sample-file.txt:112: [section9]
sample-file.txt:113: 
Matched 2 blocks(100%) with 3 lines(2.24%) in 1 files(100%)
Return-Value = 2 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 111 -y 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 111 
sample-file.txt:111: [section8]
sample-file.txt:112: [section9]
Matched 1 blocks(100%) with 2 lines(1.49%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 111 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[" -L 111 
sample-file.txt:111: [section8]
sample-file.txt:112: [section9]
Matched 1 blocks(100%) with 2 lines(1.49%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[" -L 111 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[" -t key 
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:99: key=value
sample-file.txt:104: key1=value1
sample-file.txt:105: key2=value2
sample-file.txt:110: key=value
Matched 4 blocks(80.00%) with 6 lines(4.48%) in 1 files(100%)
Return-Value = 4 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[" -t key 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[" -t key -a 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
sample-file.txt:94: [section2]
sample-file.txt:98: [section3]
sample-file.txt:99: key=value
sample-file.txt:100: 
sample-file.txt:101: [section4]
sample-file.txt:103: [section5]
sample-file.txt:104: key1=value1
sample-file.txt:105: key2=value2
sample-file.txt:106: [section6]
sample-file.txt:109: [section7]
sample-file.txt:110: key=value
sample-file.txt:111: [section8]
Matched 4 blocks(80.00%) with 6 lines(4.48%) in 1 files(100%)
Return-Value = 4 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[" -t key -a 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[" -t key -a -y 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
sample-file.txt:94: [section2]
sample-file.txt:95: key1=value1
sample-file.txt:96: key=value
sample-file.txt:97: 
sample-file.txt:98: [section3]
sample-file.txt:99: key=value
sample-file.txt:100: 
sample-file.txt:103: [section5]
sample-file.txt:104: key1=value1
sample-file.txt:105: key2=value2
sample-file.txt:106: [section6]
sample-file.txt:107: key1=value1
sample-file.txt:108: key2=value2
sample-file.txt:109: [section7]
sample-file.txt:110: key=value
Matched 6 blocks(66.67%) with 10 lines(7.46%) in 1 files(100%)
Return-Value = 6 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[" -t key -a -y 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[" -a 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
sample-file.txt:94: [section2]
sample-file.txt:98: [section3]
sample-file.txt:99: key=value
sample-file.txt:100: 
sample-file.txt:101: [section4]
sample-file.txt:103: [section5]
sample-file.txt:104: key1=value1
sample-file.txt:105: key2=value2
sample-file.txt:106: [section6]
sample-file.txt:109: [section7]
sample-file.txt:110: key=value
sample-file.txt:111: [section8]
Matched 4 blocks(80.00%) with 16 lines(11.94%) in 1 files(100%)
Return-Value = 4 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[" -a 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -a -y 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
sample-file.txt:94: [section2]
sample-file.txt:95: key1=value1
sample-file.txt:96: key=value
sample-file.txt:97: 
sample-file.txt:98: [section3]
sample-file.txt:99: key=value
sample-file.txt:100: 
sample-file.txt:101: [section4]
sample-file.txt:102: 
sample-file.txt:103: [section5]
sample-file.txt:104: key1=value1
sample-file.txt:105: key2=value2
sample-file.txt:106: [section6]
sample-file.txt:107: key1=value1
sample-file.txt:108: key2=value2
sample-file.txt:109: [section7]
sample-file.txt:110: key=value
sample-file.txt:111: [section8]
sample-file.txt:112: [section9]
sample-file.txt:113: 
Matched 9 blocks(100%) with 24 lines(17.91%) in 1 files(100%)
Return-Value = 9 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -a -y 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -a 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
sample-file.txt:94: [section2]
sample-file.txt:95: key1=value1
sample-file.txt:96: key=value
sample-file.txt:97: 
sample-file.txt:98: [section3]
sample-file.txt:99: key=value
sample-file.txt:100: 
sample-file.txt:101: [section4]
sample-file.txt:102: 
sample-file.txt:103: [section5]
sample-file.txt:104: key1=value1
sample-file.txt:105: key2=value2
sample-file.txt:106: [section6]
sample-file.txt:109: [section7]
sample-file.txt:110: key=value
sample-file.txt:111: [section8]
sample-file.txt:112: [section9]
sample-file.txt:113: 
Matched 7 blocks(100%) with 22 lines(16.42%) in 1 files(100%)
Return-Value = 7 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -a 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -a -y 
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: key2=value2
sample-file.txt:93: 
sample-file.txt:94: [section2]
sample-file.txt:95: key1=value1
sample-file.txt:96: key=value
sample-file.txt:97: 
sample-file.txt:98: [section3]
sample-file.txt:99: key=value
sample-file.txt:100: 
sample-file.txt:101: [section4]
sample-file.txt:102: 
sample-file.txt:103: [section5]
sample-file.txt:104: key1=value1
sample-file.txt:105: key2=value2
sample-file.txt:106: [section6]
sample-file.txt:107: key1=value1
sample-file.txt:108: key2=value2
sample-file.txt:109: [section7]
sample-file.txt:110: key=value
sample-file.txt:111: [section8]
sample-file.txt:112: [section9]
sample-file.txt:113: 
Matched 9 blocks(100%) with 24 lines(17.91%) in 1 files(100%)
Return-Value = 9 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -a -y 

msr -c -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" --nt Node3 -a 
sample-file.txt:47: <Tag Name="Node1">
sample-file.txt:48:   <as::item ref="NodeCitOnly" />
sample-file.txt:49:   <as::item ref="Node1Config" />
sample-file.txt:50:   <MailTo>Alex@abc.com</MailTo>
sample-file.txt:51:   <as::item ref="Node1Body">
sample-file.txt:52:     <as::pairs>
sample-file.txt:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
sample-file.txt:54:       <as::pair name="Function">#FUNCTION#</as::pair>
sample-file.txt:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
sample-file.txt:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
sample-file.txt:57:     </as::pairs>
sample-file.txt:58:   </as::item>
sample-file.txt:59: </Tag>
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 title in body for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Matched 2 blocks(66.67%) with 25 lines(18.66%) in 1 files(100%)
Return-Value = 2 : msr -c -p sample-file.txt -b "\s*<Tag" -Q "\s*</Tag" --nt Node3 -a 

msr -c -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 -a 
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 TITLE in body for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Matched 1 blocks(33.33%) with 1 lines(0.75%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*<Tag" -Q "\s*</Tag" -t title -o TITLE --nt Node3 -a 

msr -c -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 
sample-file.txt:67:   <Subject>Node 2 TITLE in body for test</Subject>
Matched 1 blocks(33.33%) with 1 lines(0.75%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*<Tag" -Q "\s*</Tag" -t title -o TITLE --nt Node3 

msr -c -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 -y 
sample-file.txt:67:   <Subject>Node 2 TITLE in body for test</Subject>
Matched 1 blocks(33.33%) with 1 lines(0.75%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*<Tag" -Q "\s*</Tag" -t title -o TITLE --nt Node3 -y 

msr -c -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 -y -a 
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 TITLE in body for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Matched 1 blocks(33.33%) with 1 lines(0.75%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*<Tag" -Q "\s*</Tag" -t title -o TITLE --nt Node3 -y -a 

msr -c -p sample-file.txt -S -L 90 -N 100 -it "\s*\[section1.*?value2\s*" -o "" 
sample-file.txt:90: [section2]
key1=value1
key=value

[section3]
key=value

Matched 11 lines(11.00%) in 1 files(100%)
Return-Value = 11 : msr -c -p sample-file.txt -S -L 90 -N 100 -it "\s*\[section1.*?value2\s*" -o "" 

msr -c -p sample-file.txt -S -it "\s*\[section1.*?value2" -o "" 
sample-file.txt:1: 2012-12-27 00:02:02.222 first  line time at 2
2012-12-27 00:01:01.111 second line time at 1
2012-12-27 00:03:03.333 third  line time at 3
2012-12-27 00:04:04.444 forth  line time at 4
2012-12-27 00:05:05.555 fifth  line time at 5

enum class LineType {
    NotMatchedLine = 0,
    MatchedLine = 1,
    UpLine = 2,
    DownLine = 3
};

class DeferredRun {
public:
        DeferredRun(const std::function<void()>& run) : _run(run) { }
        ~DeferredRun() {
                _run();
        }
private:
        const std::function<void()> _run;
};

int main(int argc, char* argv[])
{
        auto hFile = OpenHandle(argv[1]);

        DeferredRun deferredRun([&]() {
                CloseHandle(hFile);
        });
}

<pair>
    <Name>#FUNCTION#</Name>
    <Value>'All'</Value>
</pair>
<pair>
    <Name>#THRESHOLD_1#</Name>
    <Value>4000</Value>
</pair>
<pair>
    <Name>#THRESHOLD_2#</Name>
    <Value>8000</Value>
</pair>


<Tag Name="Node1">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node1Config" />
  <MailTo>Alex@abc.com</MailTo>
  <as::item ref="Node1Body">
    <as::pairs>
      <as::pair name="MailTo">Bob@abc.com</as::pair>
      <as::pair name="Function">#FUNCTION#</as::pair>
      <as::pair name="Interval">#THRESHOLD_1#</as::pair>
      <as::pair name="Switch">#THRESHOLD_2#</as::pair>
    </as::pairs>
  </as::item>
</Tag>

<Tag Name="Node2">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node2Config" />

  <MailTo>Bob@abc.com</MailTo>
  <SubArgs />
  <Subject>Node 2 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>HB</HBrgetHost>
    <Type>BBB</Type>
  </Hosts>
</Tag>

<Tag Name="Node3">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node3Config" />

  <MailTo>Clark@abc.com</MailTo>
  <AllowReTry>true</AllowReTry>
  <SubArgs>
    <SubArg>HBase</SubArg>
  </SubArgs>
  <Subject>Node3 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>LZHOST</HBrgetHost>
  </Hosts>
</Tag>

--- arbitrary block to match replace  ----------

[section2]
key1=value1
key=value

[section3]
key=value

[section4]

[section5]
key1=value1
key2=value2
[section6]
key1=value1
key2=value2
[section7]
key=value
[section8]
[section9]

--section1---------------
section 1 line 1
section 1 line 2
--section2---------------
second section line 1
second section line 2
--------------------section3
section 3 line 1
section 3 line 2
--------------------section4
section 4 line 1
--------------------section5
section 5 line 1
--------------------section6
line 6.1
--------------------section7
section 6 line 1
--------------------section8
--------------------section9
line 9.1
Matched 134 lines(100%) in 1 files(100%)
Return-Value = 134 : msr -c -p sample-file.txt -S -it "\s*\[section1.*?value2" -o "" 

msr -c -p sample-file.txt -S -it "\s*\[section1.*?(value2)" -o "$1" -L 88 -N 101 
sample-file.txt:88: 
--- arbitrary block to match replace  ----------value2

[section2]
key1=value1
key=value

[section3]
key=value

[section4]
Matched 14 lines(13.86%) in 1 files(100%)
Return-Value = 14 : msr -c -p sample-file.txt -S -it "\s*\[section1.*?(value2)" -o "$1" -L 88 -N 101 

msr -c -p sample-file.txt -S -it "\[section1.*?(value2)" -o "$1" -L 88 -N 101 
sample-file.txt:88: 
--- arbitrary block to match replace  ----------
value2

[section2]
key1=value1
key=value

[section3]
key=value

[section4]
Matched 14 lines(13.86%) in 1 files(100%)
Return-Value = 14 : msr -c -p sample-file.txt -S -it "\[section1.*?(value2)" -o "$1" -L 88 -N 101 

msr -c -p sample-file.txt -S -it "\[section1.*?(value2)" -o "$1"  -b "arbitrary block" -N 101 
sample-file.txt:89: --- arbitrary block to match replace  ----------
value2

[section2]
key1=value1
key=value

[section3]
key=value

[section4]
Matched 13 lines(12.87%) in 1 files(100%)
Return-Value = 13 : msr -c -p sample-file.txt -S -it "\[section1.*?(value2)" -o "$1"  -b "arbitrary block" -N 101 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*" -o "" 
sample-file.txt:90: 
Matched 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -S -it "\s*\[section1.*" -o "" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*?value2" -o "value2" 
sample-file.txt:90: value2

Matched 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -S -it "\s*\[section1.*?value2" -o "value2" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "\s*\[section1.*?value2" -o "value2" 
sample-file.txt:90: value2

Matched 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -S -it "\s*\[section1.*?value2" -o "value2" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o "" 
sample-file.txt:90: 
sample-file.txt:94: 
sample-file.txt:98: 
sample-file.txt:101: 
sample-file.txt:103: 
sample-file.txt:109: 
sample-file.txt:112: 
Matched 7 blocks(100%) with 22 lines(16.42%) in 1 files(100%)
Return-Value = 7 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -S -it "\s*\[section.*" -o "" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -y 
sample-file.txt:90: [section1]
key1=value1
key2=value2

sample-file.txt:94: [section2]
key1=value1
key=value

sample-file.txt:98: [section3]
key=value

sample-file.txt:101: [section4]

sample-file.txt:103: [section5]
key1=value1
key2=value2
sample-file.txt:106: [section6]
key1=value1
key2=value2
sample-file.txt:109: [section7]
key=value
sample-file.txt:111: [section8]
sample-file.txt:112: [section9]

Matched 9 blocks(100%) with 24 lines(17.91%) in 1 files(100%)
Return-Value = 9 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -S -it "\s*\[section.*" -y 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -x section1 -S -it "^\s*\[section.*" -o "" 
sample-file.txt:90: 
Matched 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -x section1 -S -it "\s*\[section.*" -o "" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 93 -S -it "\[section1.*?(value2)" -o "$1" 
sample-file.txt:90: value2

Matched 1 blocks(100%) with 4 lines(4.30%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 90 -N 93 -S -it "\[section1.*?(value2)" -o "$1" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 93 -S -it "\[section1.*?(value2)\s*" -o "$1" 
sample-file.txt:90: value2
Matched 1 blocks(100%) with 4 lines(4.30%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 90 -N 93 -S -it "\[section1.*?(value2)\s*" -o "$1" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 100 -S -it "\[section1.*?(value2)" -o "$1" 
sample-file.txt:90: value2

Matched 1 blocks(33.33%) with 4 lines(4.00%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -L 90 -N 100 -S -it "\[section1.*?(value2)" -o "$1" 

msr -c -p sample-file.txt -L 90 -N 93 -S -it "\[section1.*?(value2)" -o "$1" 
sample-file.txt:90: value2

Matched 4 lines(4.30%) in 1 files(100%)
Return-Value = 4 : msr -c -p sample-file.txt -L 90 -N 93 -S -it "\[section1.*?(value2)" -o "$1" 

msr -c -p sample-file.txt -L 90 -N 100 -S -it "\[section1.*?(value2)" -o "$1" 
sample-file.txt:90: value2

[section2]
key1=value1
key=value

[section3]
key=value

Matched 11 lines(11.00%) in 1 files(100%)
Return-Value = 11 : msr -c -p sample-file.txt -L 90 -N 100 -S -it "\[section1.*?(value2)" -o "$1" 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" 
.\sample-block.json:5:     "settings.debug": {
.\sample-block.json:6:         "type": "boolean",
.\sample-block.json:7:         "default": false,
.\sample-block.json:8:         "description": "Print debug info."
.\sample-block.json:9:     },
.\sample-block.json:10:     "settings.skipFolders": {
.\sample-block.json:11:         "default": "Debug|bin|Relase",
.\sample-block.json:12:         "description": "Default Regex pattern to skip folders."
.\sample-block.json:13:     }
Matched 2 blocks(100%) with 9 lines(60.00%) in 1 files(100%)
Return-Value = 2 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -a 
.\sample-block.json:5:     "settings.debug": {
.\sample-block.json:6:         "type": "boolean",
.\sample-block.json:7:         "default": false,
.\sample-block.json:8:         "description": "Print debug info."
.\sample-block.json:9:     },
.\sample-block.json:10:     "settings.skipFolders": {
.\sample-block.json:11:         "default": "Debug|bin|Relase",
.\sample-block.json:12:         "description": "Default Regex pattern to skip folders."
.\sample-block.json:13:     }
Matched 2 blocks(100%) with 9 lines(60.00%) in 1 files(100%)
Return-Value = 2 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -a 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nx "\"type" 
.\sample-block.json:10:     "settings.skipFolders": {
.\sample-block.json:11:         "default": "Debug|bin|Relase",
.\sample-block.json:12:         "description": "Default Regex pattern to skip folders."
.\sample-block.json:13:     }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" --nx "\"type" 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" 
.\sample-block.json:10:     "settings.skipFolders": {
.\sample-block.json:11:         "default": "Debug|bin|Relase",
.\sample-block.json:12:         "description": "Default Regex pattern to skip folders."
.\sample-block.json:13:     }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" --nt "\s*\"type" 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nx "\"type" -a 
.\sample-block.json:10:     "settings.skipFolders": {
.\sample-block.json:11:         "default": "Debug|bin|Relase",
.\sample-block.json:12:         "description": "Default Regex pattern to skip folders."
.\sample-block.json:13:     }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" --nx "\"type" -a 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" -a 
.\sample-block.json:10:     "settings.skipFolders": {
.\sample-block.json:11:         "default": "Debug|bin|Relase",
.\sample-block.json:12:         "description": "Default Regex pattern to skip folders."
.\sample-block.json:13:     }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" --nt "\s*\"type" -a 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" --nx "\"type" 
.\sample-block.json:10:     "settings.skipFolders": {
.\sample-block.json:11:         "default": "Debug|bin|Relase",
.\sample-block.json:12:         "description": "Default Regex pattern to skip folders."
.\sample-block.json:13:     }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" --nt "\s*\"type" --nx "\"type" 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" --nx "\"type" -a 
.\sample-block.json:10:     "settings.skipFolders": {
.\sample-block.json:11:         "default": "Debug|bin|Relase",
.\sample-block.json:12:         "description": "Default Regex pattern to skip folders."
.\sample-block.json:13:     }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" --nt "\s*\"type" --nx "\"type" -a 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nx "\"type" 
.\sample-block.json:10:     "settings.skipFolders": {
.\sample-block.json:11:         "default": "Debug|bin|Relase",
.\sample-block.json:12:         "description": "Default Regex pattern to skip folders."
.\sample-block.json:13:     }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" --nx "\"type" 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" 
.\sample-block.json:10:     "settings.skipFolders": {
.\sample-block.json:11:         "default": "Debug|bin|Relase",
.\sample-block.json:12:         "description": "Default Regex pattern to skip folders."
.\sample-block.json:13:     }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" --nt "\s*\"type" 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" --nx "\"type" -a -t default 
.\sample-block.json:10:     "settings.skipFolders": {
.\sample-block.json:11:         "default": "Debug|bin|Relase",
.\sample-block.json:12:         "description": "Default Regex pattern to skip folders."
.\sample-block.json:13:     }
Matched 1 blocks(50.00%) with 1 lines(6.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" --nt "\s*\"type" --nx "\"type" -a -t default 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" -a -t default -x Debug -o debug -j 
.\sample-block.json:10:     "settings.skipFolders": {
.\sample-block.json:11:         "default": "debug|bin|Relase",
.\sample-block.json:12:         "description": "Default Regex pattern to skip folders."
.\sample-block.json:13:     }
Replaced 1 blocks(50.00%) with 1 lines(6.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" --nt "\s*\"type" -a -t default -x Debug -o debug -j 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" -a -t default -x Debug -o Debug -j 
Replaced 0 blocks with 0 lines in 0 files
Return-Value = 0 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" --nt "\s*\"type" -a -t default -x Debug -o Debug -j 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" 
.\sample-block.json:10:     "settings.skipFolders": {
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -S --nt "\s*.type" 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -a 
.\sample-block.json:10:     "settings.skipFolders": {
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -S --nt "\s*.type" -a 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -a -t default 
.\sample-block.json:10:     "settings.skipFolders": {
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -S --nt "\s*.type" -a -t default 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -a -t default -x Debug -o debug -j 
.\sample-block.json:10:     "settings.skipFolders": {
        "default": "debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Replaced 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -S --nt "\s*.type" -a -t default -x Debug -o debug -j 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -a -t default -x Debug -o Debug -j 
.\sample-block.json:10:     "settings.skipFolders": {
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Replaced 0 blocks with 0 lines in 0 files
Return-Value = 0 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -S --nt "\s*.type" -a -t default -x Debug -o Debug -j 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t default 
.\sample-block.json:10:     "settings.skipFolders": {
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -S --nt "\s*.type" -t default 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t default -x Debug -o debug -j 
.\sample-block.json:10:     "settings.skipFolders": {
        "default": "debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Replaced 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -S --nt "\s*.type" -t default -x Debug -o debug -j 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t default -x Debug -o Debug -j 
Replaced 0 blocks with 0 lines in 0 files
Return-Value = 0 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -S --nt "\s*.type" -t default -x Debug -o Debug -j 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "^(\s*\"settings.*?\{[^\r\n]*)([\r\n]+)(\s*)" -o "\1\2\3\"type\": \"string\",\2\3" 
.\sample-block.json:10:     "settings.skipFolders": {
        "type": "string",
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -S --nt "\s*.type" -t "(\s*\"settings.*?\{[\r\n]*)([\r\n]+)(\s*)" -o "\1\2\3\"type\": \"string\",\2\3" 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "^(\s*\"settings.*?\{[^\r\n]*)([\r\n]+)(\s*)" -o "\1\2\3\"type\": \"string\",\2\3" -j 
.\sample-block.json:10:     "settings.skipFolders": {
        "type": "string",
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Replaced 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -S --nt "\s*.type" -t "(\s*\"settings.*?\{[\r\n]*)([\r\n]+)(\s*)" -o "\1\2\3\"type\": \"string\",\2\3" -j 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "[\r\n]+\s*\"default[^\r\n]*" -o "" 
.\sample-block.json:10:     "settings.skipFolders": {
        "description": "Default Regex pattern to skip folders."
    }
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -S --nt "\s*.type" -t "[\r\n]+\s*\"default[\r\n]*" -o "" 

msr -c -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t ".*" -o "" 
.\sample-block.json:10: 
Matched 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value = 1 : msr -c -p .\sample-block.json -b "\s*\"settings.*?\{" -Q "\s*\}\s*,?\s*$" -S --nt "\s*.type" -t ".*" -o "" 

msr -c -p .\sample-block.json -b "^\s*\"settings.skip.*?\{" -q "skip folders" -S -t "[\r\n]+\s*\"default[^\r\n]*" -o "" 
.\sample-block.json:10:     "settings.skipFolders": {
        "description": "Default Regex pattern to skip folders."
Matched 3 lines(25.00%) in 1 files(100%)
Return-Value = 3 : msr -c -p .\sample-block.json -b "\s*\"settings.skip.*?\{" -q "skip folders" -S -t "[\r\n]+\s*\"default[\r\n]*" -o "" 

msr -c -p .\sample-block.json -b "^\s*\"settings.skip.*?\{" -q "skip folders" -S -t ".*" -o "" 
.\sample-block.json:10: 
Matched 3 lines(25.00%) in 1 files(100%)
Return-Value = 3 : msr -c -p .\sample-block.json -b "\s*\"settings.skip.*?\{" -q "skip folders" -S -t ".*" -o "" 

msr -c -p sample-file.txt -b "^\[" -Q "no-such-end" -t SECTION 
Matched 0 blocks with 0 lines in 0 files
Return-Value = 0 : msr -c -p sample-file.txt -b "\[" -Q "no-such-end" -t SECTION 

msr -c -p sample-file.txt -b "--section1" -Q "^---|^\s*$" -q "--section3" -t SEC -ya 
Matched 0 blocks with 0 lines in 0 files
Return-Value = 0 : msr -c -p sample-file.txt -b "--section1" -Q "---|\s*$" -q "--section3" -t SEC -ya 

msr -c -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 
sample-file.txt:67:   <Subject>Node 2 TITLE in body for test</Subject>
Matched 1 blocks(33.33%) with 1 lines(0.75%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*<Tag" -Q "\s*</Tag" -t title -o TITLE --nt Node3 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*" 
sample-file.txt:90: [section1]
key1=value1
key2=value2

Matched 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -S -it "\s*\[section1.*" 

msr -c -p sample-file.txt -S -L 90 -N 100 -it "\s*\[section1.*?value2\s*" -o "" 
sample-file.txt:90: [section2]
key1=value1
key=value

[section3]
key=value

Matched 11 lines(11.00%) in 1 files(100%)
Return-Value = 11 : msr -c -p sample-file.txt -S -L 90 -N 100 -it "\s*\[section1.*?value2\s*" -o "" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*" -o "" 
sample-file.txt:90: 
Matched 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -S -it "\s*\[section1.*" -o "" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o "" 
sample-file.txt:90: 
sample-file.txt:94: 
sample-file.txt:98: 
sample-file.txt:101: 
sample-file.txt:103: 
sample-file.txt:109: 
sample-file.txt:112: 
Matched 7 blocks(100%) with 22 lines(16.42%) in 1 files(100%)
Return-Value = 7 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -S -it "\s*\[section.*" -o "" 

msr -c -p sample-file.txt -S -it "\s*\[section1.*?value2" -o "" 
sample-file.txt:1: 2012-12-27 00:02:02.222 first  line time at 2
2012-12-27 00:01:01.111 second line time at 1
2012-12-27 00:03:03.333 third  line time at 3
2012-12-27 00:04:04.444 forth  line time at 4
2012-12-27 00:05:05.555 fifth  line time at 5

enum class LineType {
    NotMatchedLine = 0,
    MatchedLine = 1,
    UpLine = 2,
    DownLine = 3
};

class DeferredRun {
public:
        DeferredRun(const std::function<void()>& run) : _run(run) { }
        ~DeferredRun() {
                _run();
        }
private:
        const std::function<void()> _run;
};

int main(int argc, char* argv[])
{
        auto hFile = OpenHandle(argv[1]);

        DeferredRun deferredRun([&]() {
                CloseHandle(hFile);
        });
}

<pair>
    <Name>#FUNCTION#</Name>
    <Value>'All'</Value>
</pair>
<pair>
    <Name>#THRESHOLD_1#</Name>
    <Value>4000</Value>
</pair>
<pair>
    <Name>#THRESHOLD_2#</Name>
    <Value>8000</Value>
</pair>


<Tag Name="Node1">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node1Config" />
  <MailTo>Alex@abc.com</MailTo>
  <as::item ref="Node1Body">
    <as::pairs>
      <as::pair name="MailTo">Bob@abc.com</as::pair>
      <as::pair name="Function">#FUNCTION#</as::pair>
      <as::pair name="Interval">#THRESHOLD_1#</as::pair>
      <as::pair name="Switch">#THRESHOLD_2#</as::pair>
    </as::pairs>
  </as::item>
</Tag>

<Tag Name="Node2">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node2Config" />

  <MailTo>Bob@abc.com</MailTo>
  <SubArgs />
  <Subject>Node 2 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>HB</HBrgetHost>
    <Type>BBB</Type>
  </Hosts>
</Tag>

<Tag Name="Node3">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node3Config" />

  <MailTo>Clark@abc.com</MailTo>
  <AllowReTry>true</AllowReTry>
  <SubArgs>
    <SubArg>HBase</SubArg>
  </SubArgs>
  <Subject>Node3 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>LZHOST</HBrgetHost>
  </Hosts>
</Tag>

--- arbitrary block to match replace  ----------

[section2]
key1=value1
key=value

[section3]
key=value

[section4]

[section5]
key1=value1
key2=value2
[section6]
key1=value1
key2=value2
[section7]
key=value
[section8]
[section9]

--section1---------------
section 1 line 1
section 1 line 2
--section2---------------
second section line 1
second section line 2
--------------------section3
section 3 line 1
section 3 line 2
--------------------section4
section 4 line 1
--------------------section5
section 5 line 1
--------------------section6
line 6.1
--------------------section7
section 6 line 1
--------------------section8
--------------------section9
line 9.1
Matched 134 lines(100%) in 1 files(100%)
Return-Value = 134 : msr -c -p sample-file.txt -S -it "\s*\[section1.*?value2" -o "" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o "" 
sample-file.txt:90: 
sample-file.txt:94: 
sample-file.txt:98: 
sample-file.txt:101: 
sample-file.txt:103: 
sample-file.txt:109: 
sample-file.txt:112: 
Matched 7 blocks(100%) with 22 lines(16.42%) in 1 files(100%)
Return-Value = 7 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -S -it "\s*\[section.*" -o "" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o "" 
sample-file.txt:90: 
sample-file.txt:94: 
sample-file.txt:98: 
sample-file.txt:101: 
sample-file.txt:103: 
sample-file.txt:109: 
sample-file.txt:112: 
Matched 7 blocks(100%) with 22 lines(16.42%) in 1 files(100%)
Return-Value = 7 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -S -it "\s*\[section.*" -o "" 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o "" -y 
sample-file.txt:90: 
sample-file.txt:94: 
sample-file.txt:98: 
sample-file.txt:101: 
sample-file.txt:103: 
sample-file.txt:106: 
sample-file.txt:109: 
sample-file.txt:111: 
sample-file.txt:112: 
Matched 9 blocks(100%) with 24 lines(17.91%) in 1 files(100%)
Return-Value = 9 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -S -it "\s*\[section.*" -o "" -y 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o "" -y 
sample-file.txt:90: 
sample-file.txt:94: 
sample-file.txt:98: 
sample-file.txt:101: 
sample-file.txt:103: 
sample-file.txt:106: 
sample-file.txt:109: 
sample-file.txt:111: 
sample-file.txt:112: 
Matched 9 blocks(100%) with 24 lines(17.91%) in 1 files(100%)
Return-Value = 9 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -S -it "\s*\[section.*" -o "" -y 

msr -c -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -x section1 -S -it "^\s*\[section.*" -o "" 
sample-file.txt:90: 
Matched 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value = 1 : msr -c -p sample-file.txt -b "\s*\[" -Q "\s*\[|\s*$" -x section1 -S -it "\s*\[section.*" -o "" 

msr -c -p sample-file.txt -t "\b(NotMatchedLine|MatchedLine|UpLine|DownLine)" -o "LineType::$1" --nt "=\s*\d+" 
Matched 0 lines in 0 files
Return-Value = 0 : msr -c -p sample-file.txt -t "\b(NotMatchedLine|MatchedLine|UpLine|DownLine)" -o "LineType::$1" --nt "=\s*\d+" 

msr -c -p sample-file.txt -t "\b(NotMatchedLine|MatchedLine|UpLine|DownLine)" -o "LineType::$1" 
sample-file.txt:8:     LineType::NotMatchedLine = 0,
sample-file.txt:9:     LineType::MatchedLine = 1,
sample-file.txt:10:     LineType::UpLine = 2,
sample-file.txt:11:     LineType::DownLine = 3
Matched 4 lines(2.99%) in 1 files(100%)
Return-Value = 4 : msr -c -p sample-file.txt -t "\b(NotMatchedLine|MatchedLine|UpLine|DownLine)" -o "LineType::$1" 

msr -c -p sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End  Should return 0 
Matched 0 blocks with 0 lines in 1 files
Return-Value = 0 : msr -c -p sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End  Should return 0 

msr -c -p sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End -l Should return 0 
Matched 0 blocks with 0 lines in 1 files
Return-Value = 0 : msr -c -p sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End -l Should return 0 

msr -c -p sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0 
Matched 0 lines in 1 files
Return-Value = 0 : msr -c -p sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0 

msr -c -p sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0 
Matched 0 lines in 1 files
Return-Value = 0 : msr -c -p sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0 

msr -c -p sample-file.txt -b "<Tag Name.*?Node1.*?>" -Q "</Tag>" -PA -e "#\S+?#" 
<Tag Name="Node1">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node1Config" />
  <MailTo>Alex@abc.com</MailTo>
  <as::item ref="Node1Body">
    <as::pairs>
      <as::pair name="MailTo">Bob@abc.com</as::pair>
      <as::pair name="Function">#FUNCTION#</as::pair>
      <as::pair name="Interval">#THRESHOLD_1#</as::pair>
      <as::pair name="Switch">#THRESHOLD_2#</as::pair>
    </as::pairs>
  </as::item>
</Tag>
Return-Value = 1 : msr -c -p sample-file.txt -b "<Tag Name.*?Node1.*?>" -Q "</Tag>" -PA -e "#\S+?#" 


echo example-commands.bat | msr -t .+  -o "findstr xml $0" -XA 
msr -c -z www.lz.text/temp.normal/samples/my.normal/my-stream.xml -x normal/ -t "(www.*)/([^/]+\.xml)\s*"
msr -c -p Node1.tmp -PA -e ".All.|4000|8000"  ## This is an expanded xml that has replaced name value settings.
 

msr -p example-commands.bat -b "::Stop calling" --nt "::Stop calling" -ix "%~dp0" -o %~dp0 -a -PAC | msr -it "\bmsr\b" -o "msr" -a -XPAC 
<Tag Name="Node1">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node1Config" />
  <MailTo>Alex@abc.com</MailTo>
  <as::item ref="Node1Body">
    <as::pairs>
      <as::pair name="MailTo">Bob@abc.com</as::pair>
      <as::pair name="Function">#FUNCTION#</as::pair>
      <as::pair name="Interval">#THRESHOLD_1#</as::pair>
      <as::pair name="Switch">#THRESHOLD_2#</as::pair>
    </as::pairs>
  </as::item>
</Tag>
Run-Command3[1] = msr -x "#FUNCTION#" -o "'All'" -p Node1.tmp -R -H 0
1-1 : Node1.tmp
Replaced 1 lines(7.14%) in 1 files(100%)
Run-Command3[2] = msr -x "#THRESHOLD_1#" -o "4000" -p Node1.tmp -R -H 0
1-1 : Node1.tmp
Replaced 1 lines(7.14%) in 1 files(100%)
Run-Command3[3] = msr -x "#THRESHOLD_2#" -o "8000" -p Node1.tmp -R -H 0
1-1 : Node1.tmp
Replaced 1 lines(7.14%) in 1 files(100%)
<Tag Name="Node1">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node1Config" />
  <MailTo>Alex@abc.com</MailTo>
  <as::item ref="Node1Body">
    <as::pairs>
      <as::pair name="MailTo">Bob@abc.com</as::pair>
      <as::pair name="Function">'All'</as::pair>
      <as::pair name="Interval">4000</as::pair>
      <as::pair name="Switch">8000</as::pair>
    </as::pairs>
  </as::item>
</Tag>


.\base-test-only-output-replaced-lines.log:68: Replaced 1 lines(0.40%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:214: Replaced 1 lines(0.40%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:265: Replaced 2 lines(0.79%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:19: Replaced 4 lines(2.99%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:915: Replaced 4 lines(2.99%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:639: Replaced 4 lines(4.30%) in 1 files(100%)
.\base-windows-file-test.log:2139: Replaced 1 lines(7.14%) in 1 files(100%)
.\base-windows-file-test.log:2142: Replaced 1 lines(7.14%) in 1 files(100%)
.\base-windows-file-test.log:2145: Replaced 1 lines(7.14%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:157: Replaced 19 lines(7.54%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:139: Replaced 24 lines(9.52%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:152: Replaced 24 lines(9.52%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:177: Replaced 24 lines(9.52%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:190: Replaced 24 lines(9.52%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:203: Replaced 24 lines(9.52%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:403: Replaced 11 lines(11.00%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:652: Replaced 11 lines(11.00%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:700: Replaced 11 lines(11.00%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:583: Replaced 13 lines(12.87%) in 1 files(100%)
.\base-test-only-output-replaced-lines.log:113: Replaced 33 lines(13.10%) in 1 files(100%)
Matched 57 lines(0.74%) in 2 files(20.00%)
